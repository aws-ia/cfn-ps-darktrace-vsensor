AWSTemplateFormatVersion: '2010-09-09'
Description: This template creates a virtual private cloud (VPC) infrastructure for a multi-Availability Zone vSensor deployment on the Amazon Web Services (AWS) Cloud. It deploys a VPC and scalable cluster of Darktrace vSensors behind a Network Load Balancer. **WARNING** You will be billed for AWS resources you use if you create a stack from this template. (qs-1ths1l3in)
Transform: 'AWS::LanguageExtensions'
Metadata:

  QuickStartDocumentation:
    EntrypointName: Parameters for deploying into a new VPC
    Order: 1
  cfn-lint:
    config:
      ignore_checks:
        - W9006
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network configuration
      Parameters:
        - AvailabilityZones
        - VPCCIDR
        - PrivateSubnet1CIDR
        - PrivateSubnet2CIDR
        - PrivateSubnet3CIDR
        - PrivateSubnet4CIDR
        - PrivateSubnet5CIDR
        - PrivateSubnet6CIDR
        - PublicSubnet1CIDR
        - PublicSubnet2CIDR
        - PublicSubnet3CIDR
        - PublicSubnet4CIDR
        - PublicSubnet5CIDR
        - PublicSubnet6CIDR
    - Label:
        default: Darktrace Instance configuration
      Parameters:
        - DarktraceInstanceHostname
        - DarktraceInstancePushtoken
        - DarktraceInstanceProxy
    - Label:
        default: Darktrace vSensor configuration
      Parameters:
        - SessionManagerEnable
        - VSensorInstanceType
        - VSensorKeyPairName
        - VSensorUpdatekey
        - VSensorDesiredCapacityASG
        - VSensorMinSizeASG
        - VSensorMaxSizeASG
        - VSensorOsSensorHMAC
    - Label:
        default: VPC Traffic Mirror configuration
      Parameters:
        - VSensorTrafficMirrorRuleNumber
        - VSensorTrafficMirrorSourceCIDR
        - VSensorTrafficMirrorDestCIDR
    - Label:
        default: Logs and captured packet retention
      Parameters:
        - VSensorLogGroupRetention
        - VSensorLifecycleS3BucketDays
    - Label:
        default: AWS Quick Start configuration
      Parameters:
        - QSS3BucketName
        - QSS3BucketRegion
        - QSS3KeyPrefix
        - ShortID

    ParameterLabels:
      # Network Config

      AvailabilityZones:
        default: Availability Zones
      VPCCIDR:
        default: VPC CIDR
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PrivateSubnet4CIDR:
        default: Private subnet 4 CIDR
      PrivateSubnet5CIDR:
        default: Private subnet 5 CIDR
      PrivateSubnet6CIDR:
        default: Private subnet 6 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      PublicSubnet4CIDR:
        default: Public subnet 4 CIDR
      PublicSubnet5CIDR:
        default: Public subnet 5 CIDR
      PublicSubnet6CIDR:
        default: Public subnet 6 CIDR

      # Darktrace Instance Config

      DarktraceInstanceHostname:
        default: Darktrace Instance FQDN / IP
      DarktraceInstancePushtoken:
        default: Darktrace Instance push token
      DarktraceInstanceProxy:
        default: Darktrace Instance proxy URL

      # vSensor Config

      SessionManagerEnable:
        default: Deploy with AWS Session Manager?
      VSensorInstanceType:
        default: EC2 instance type
      VSensorKeyPairName:
        default: EC2 key pair name
      VSensorUpdatekey:
        default: vSensor Update key
      VSensorDesiredCapacityASG:
        default: Desired vSensor instance capacity
      VSensorMinSizeASG:
        default: Minimum vSensor instance capacity
      VSensorMaxSizeASG:
        default: Maximum vSensor instance capacity
      VSensorOsSensorHMAC:
        default: osSensor HMAC Token

      # Logs and PCAPs Config

      VSensorLogGroupRetention:
        default: CloudWatch logs retention (days)
      VSensorLifecycleS3BucketDays:
        default: Captured packets storage retention (days)

      # Traffic Mirror Config

      VSensorTrafficMirrorRuleNumber:
        default: Traffic Mirror rule number
      VSensorTrafficMirrorSourceCIDR:
        default: Source traffic CIDR to filter (0.0.0.0/0 for all traffic)
      VSensorTrafficMirrorDestCIDR:
        default: Destination traffic CIDR to filter (0.0.0.0/0 for all traffic)
      VSensorCrossZoneLBEnable:
        default: Enable Cross-Zone Load Balancing

      # QuickStart Config

      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      ShortID:
        default: Quick Start unique run ID (12 characters or less)

Parameters:
  # Darktrace Instance Config

  DarktraceInstanceHostname:
    Type: AWS::SSM::Parameter::Name
    Description: "Internet accessible FQDN of the Darktrace instance (e.g. https://instancename.cloud.darktrace.com:443). This should be the same FQDN you use to access the web interface of Darktrace. HTTPS Protocol prefix and port suffix are optional. Defaults to port 443. (AWS::SSM::Parameter::Name)"
  DarktraceInstancePushtoken:
    Type: AWS::SSM::Parameter::Name
    Description: "Push token to authenticate with the Darktrace instance, provided when you create a *push token* probe entry in the Darktrace UI Config. (AWS::SSM::Parameter::Name)"
  DarktraceInstanceProxy:
    Type: AWS::SSM::Parameter::Name
    Description: "Provide proxy if the vSensor requires proxy access to connect to the Darktrace instance. Include HTTP protocol and optional auth (e.g. http://user:pass@hostname:port). Set SSM parameter value to 'none' to disable. (AWS::SSM::Parameter::Name)"

  # vSensor Config

  SessionManagerEnable:
    Default: 'Yes'
    Description: Configure IAM permissions to enable AWS Systems Manager Sessions to access vSensors remotely. See QuickStart Deployment guide section "Using AWS Sessions Manager" (https://aws-ia.github.io/cfn-ps-darktrace-vsensor/#_using_aws_sessions_manager). This can be used in preference to a jump box for administrative connections to the vSensors. AWS Systems Manager Sessions is the recommended way to connect to your vSensors.
    Type: String
    AllowedValues:
      - 'Yes'
      - 'No'
  VSensorInstanceType:
    Default: t3.medium
    Type: String
    Description: Specify the EC2 instance type that will be used in the Auto-Scaling Group. It is recommended to start with `t3.medium`, change if you expect frequent high traffic. (String)
    AllowedValues:
      - t3.medium
      - m5.large
      - m5.2xlarge
      - m5.4xlarge
  VSensorKeyPairName:
    Type: String
    Description: Add a pre-existing EC2 key pair to use to authenticate to the vSensors. vSensors are designed to be self managed - however some optional administrative tasks will need to be performed via CLI. Use 'none' to proceed without a key pair (only if you are using SSM or Instance Connect, otherwise you will not be able to access your vSensor).
  VSensorUpdatekey:
    Type: AWS::SSM::Parameter::Name
    Description: "The vSensor Update Key is required to download installation packages and updates from Darktrace. It is provided when you create a *push token* probe entry in the Darktrace UI Config or can be found on the Credentials section on the Darktrace Customer Portal (https://customerportal.darktrace.com) (AWS::SSM::Parameter::Name)"
  VSensorDesiredCapacityASG:
    Type: Number
    Description: Initial number of vSensor instances in the Auto-Scaling Group(s). The value represents the total for all Availability Zones, so must be at least equal to AZ count if cross-zone balancing is disabled. Default recommended value 1 with cross-zone balancing enabled. 
    Default: 1
  VSensorMinSizeASG:
    Type: Number
    Description: Minimum number of vSensor instances in the Auto-Scaling Group(s). The value represents the total for all Availability Zones, so must be at least equal to AZ count if cross-zone balancing is disabled. Default recommended value 1 with cross-zone balancing enabled.
    Default: 1
  VSensorMaxSizeASG:
    Type: Number
    Description: Maximum number of vSensor instances in the Auto-Scaling Group(s). The value represents the total for all Availability Zones, so must be at least equal to AZ count if cross-zone balancing is disabled. Default recommended value 5 with cross-zone balancing enabled.
    Default: 5
  VSensorOsSensorHMAC:
    Type: AWS::SSM::Parameter::Name
    Description: "Set a pre-shared (HMAC) token that can be supplied to osSensor agents in order for them to authenticate with vSensor. Required if you deploy osSensor agent traffic capturing. Not required if you use AWS Traffic Mirroring. Set SSM parameter value to 'none' to disable. (AWS::SSM::Parameter::Name)"

  # Networking Config

  AvailabilityZones:
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
    Description: Availability Zones to use for the subnets in the VPC. Two Availability Zones are used for this deployment.
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC to be created.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.0.0/20
    Description: CIDR block for private subnet 1, located in Availability Zone 1.
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.16.0/20
    Description: CIDR block for private subnet 2, located in Availability Zone 2. Leave default if less Availability Zones are required.
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.32.0/20
    Description: CIDR block for private subnet 3, located in Availability Zone 3. Leave default if less Availability Zones are required.
    Type: String
  PrivateSubnet4CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.48.0/20
    Description: CIDR block for private subnet 4, located in Availability Zone 4. Leave default if less Availability Zones are required.
    Type: String
  PrivateSubnet5CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.64.0/20
    Description: CIDR block for private subnet 5, located in Availability Zone 5. Leave default if less Availability Zones are required.
    Type: String
  PrivateSubnet6CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.80.0/20
    Description: CIDR block for private subnet 6, located in Availability Zone 6. Leave default if less Availability Zones are required.
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.128.0/20
    Description: CIDR block for the public (DMZ) subnet 1, located in Availability Zone 1.
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.144.0/20
    Description: CIDR block for the public (DMZ) subnet 2, located in Availability Zone 2. Leave default if less Availability Zones are required.
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.160.0/20
    Description: CIDR block for the public (DMZ) subnet 3, located in Availability Zone 3. Leave default if less Availability Zones are required.
    Type: String
  PublicSubnet4CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.176.0/20
    Description: CIDR block for the public (DMZ) subnet 4, located in Availability Zone 4. Leave default if less Availability Zones are required.
    Type: String
  PublicSubnet5CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.192.0/20
    Description: CIDR block for the public (DMZ) subnet 5, located in Availability Zone 5. Leave default if less Availability Zones are required.
    Type: String
  PublicSubnet6CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.208.0/20
    Description: CIDR block for the public (DMZ) subnet 6, located in Availability Zone 6. Leave default if less Availability Zones are required.
    Type: String

  # Traffic Mirroring Config

  VSensorTrafficMirrorRuleNumber:
    Type: Number
    Description: Enter a priority to assign to the rule.
    Default: 100
  VSensorTrafficMirrorSourceCIDR:
    Type: String
    Default: '0.0.0.0/0'
    Description: "To restrict the traffic captured to that emerging from a specific source IP range, enter the source CIDR block. It will be applied to the Traffic Mirror filter. Enter `0.0.0.0/0` for all traffic."
  VSensorTrafficMirrorDestCIDR:
    Type: String
    Default: '0.0.0.0/0'
    Description: "To restrict the traffic captured to that destined for a specific IP range, enter the destination CIDR block. It will be applied to the Traffic Mirror filter. Enter `0.0.0.0/0` for all traffic."
  VSensorCrossZoneLBEnable:
    Type: String
    Description:
      Enable (Yes) or disable (No) Cross-Zone Load Balancing.
      To minimise traffic costs, Cross-Zone Load Balancing is disabled by default.
      When it is disabled, make sure there is at least one vSensor in each Availability Zone with mirror sources.
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'

  # Logs & PCAPs Config

  VSensorLogGroupRetention:
    Type: Number
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    Description: Specify the number of days to retain CloudWatch logs. Logs and metrics from the Darktrace vSensor EC2 instances are stored in CloudWatch.
    Default: 30
  VSensorLifecycleS3BucketDays:
    Type: Number
    Description: Darktrace vSensors store packet capture data in Amazon S3. The PCAP associated with network connections are retreivable via the Darktrace Threat Vizualiser UI. Specify the number of days to retain captured packets in Amazon S3. Set to 0 for no PCAP storage.
    MinValue: 0 
    Default: 7

  # Quickstart Config

  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a 
      hyphen (-).
    Default: aws-ia
    Description:
      Name of the S3 bucket for your copy of the Quick Start assets. 
      Keep the default name unless you are customizing the template. 
      Changing the name updates code references to point to a new Quick 
      Start location. This name can include numbers, lowercase letters, 
      uppercase letters, and hyphens, but do not start or end with a hyphen (-). 
      See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is 
      hosted. Keep the default Region unless you are customizing the template.
      Changing this Region updates code references to point to a new Quick Start location.
      When using your own bucket, specify the Region.
      See https://aws-quickstart.github.io/option1.html.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/). The prefix should
      end with a forward slash (/).
    Default: cfn-ps-darktrace-vsensor/
    Description:
      S3 key prefix that is used to simulate a directory for your copy of the 
      Quick Start assets. Keep the default prefix unless you are customizing 
      the template. Changing this prefix updates code references to point to 
      a new Quick Start location. This prefix can include numbers, lowercase 
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with 
      a forward slash. See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html 
      and https://aws-quickstart.github.io/option1.html.
    Type: String
  ShortID:
    AllowedPattern: ^[0-9a-z-]{0,12}$
    ConstraintDescription: Unique ID prefix can include up to 12 characters, including numbers, lowercase letters, hyphens (-).
    Description: Quick Start short unique ID used to identify resources from other installations of this Quick Start. If left empty, a random string is generated.
    Default: ""
    Type: String

Conditions:
  UsingDefaultBucket: !Equals
    - !Ref QSS3BucketName
    - "aws-ia"
  CreatePCAPStorage: !Not
    - !Equals
      - !Ref VSensorLifecycleS3BucketDays
      - 0
  AllowSessionsManager: !Equals 
    - !Ref SessionManagerEnable
    - "Yes"
  GenerateShortID: !Equals
    - !Ref ShortID
    - ""
  2AZCondition: !Or
    - !Equals [Fn::Length: !Ref 'AvailabilityZones', 2]
    - !Condition '3AZCondition'
  3AZCondition: !Or
    - !Equals [Fn::Length: !Ref 'AvailabilityZones', 3]
    - !Condition '4AZCondition'
  4AZCondition: !Or
    - !Equals [Fn::Length: !Ref 'AvailabilityZones', 4]
    - !Condition '5AZCondition'
  5AZCondition: !Or
    - !Equals [Fn::Length: !Ref 'AvailabilityZones', 5]
    - !Condition '6AZCondition'
  6AZCondition: !Equals [Fn::Length: !Ref 'AvailabilityZones', 6]

Resources:

  ## Generate a short ID if the user does not define one.
  # This involves running a Lambda function.
  # From https://www.itonaut.com/2018/01/03/generate-passwords-in-aws-cloudformation-template/
  # Modified to take a user submitted ShortID and return this if provided, else generate the random value.
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Condition: GenerateShortID
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole

  RandomStringLambdaFunction:
    Type: AWS::Lambda::Function
    Condition: GenerateShortID
    Metadata:
      cfn-lint:
        config:
          ignore_checks:
            - E3030 # Valid value for Runtime (nodejs20.x)
    Properties:
      Code:
        ZipFile: >
          const response = require("cfn-response"); const randomString = (length, chars) => {
              var result = '';
              for (var i = length; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];
              return result;
          }; exports.handler = (event, context) =>{
            let str = "";
            let length = 12;
            let shortID = "";
            if ("ResourceProperties" in event) {
              if ("ShortID" in event['ResourceProperties'] && event['ResourceProperties']['ShortID'] != "") {
                str = event['ResourceProperties']['ShortID'];
              }
              else if ("Length" in event['ResourceProperties']) {
                length = Number(event['ResourceProperties']['Length']);
              }
            }
            if (str == "") {
              str = randomString(length, '0123456789abcdefghijklmnopqrstuvwxyz');
            }
            const responseData = {IDString: str};
            response.send(event, context, response.SUCCESS, responseData);
          };
      Handler: index.handler
      Runtime: nodejs20.x
      Role: !GetAtt LambdaExecutionRole.Arn
      MemorySize: 128
      Timeout: 20
      Tags:
        - Key: darktrace-vsensor-quickstart
          Value: !Ref ShortID
      TracingConfig:
        Mode: Active

  RandomStringLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: GenerateShortID
    Properties:
      LogGroupName: !Sub "/aws/lambda/${RandomStringLambdaFunction}"
      RetentionInDays: !Ref VSensorLogGroupRetention
      
  RandomStringLambdaLogPermissions:
    Type: AWS::IAM::Policy
    Condition: GenerateShortID
    Properties:
      Roles:
        - !Ref LambdaExecutionRole
      PolicyName: !Sub "${RandomStringLambdaFunction}-LogGroup"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${RandomStringLambdaFunction}"
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${RandomStringLambdaFunction}:*"
          - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${RandomStringLambdaFunction}:*:*"

  ShortIDRand:
    Type: AWS::CloudFormation::CustomResource
    Condition: GenerateShortID
    DependsOn: RandomStringLambdaLogPermissions
    Properties:
      Length: 12
      ShortID: !Ref ShortID
      ServiceToken: !GetAtt RandomStringLambdaFunction.Arn

  VPCStack:
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    # Ignore Notification ARN in customer env.
    # kics-scan ignore-line
    Properties:
      TemplateURL:
          !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/aws-vpc.template.yaml'
          - S3Bucket: !If
              - UsingDefaultBucket
              - !Sub "aws-ia-${AWS::Region}"
              - !Ref "QSS3BucketName"
            S3Region: !If
              - UsingDefaultBucket
              - !Ref "AWS::Region"
              - !Ref "QSS3BucketRegion"
      Parameters:
        AvailabilityZones:
          !Join
            - ','
            - Ref: AvailabilityZones
        NumberOfAZs:
          Fn::Length: !Ref "AvailabilityZones"
        PrivateSubnet1ACIDR:
          Ref: PrivateSubnet1CIDR
        PrivateSubnet2ACIDR:
          Ref: PrivateSubnet2CIDR
        PrivateSubnet3ACIDR:
          Ref: PrivateSubnet3CIDR
        PrivateSubnet4ACIDR:
          Ref: PrivateSubnet4CIDR
        PrivateSubnet5ACIDR:
          Ref: PrivateSubnet5CIDR
        PrivateSubnet6ACIDR:
          Ref: PrivateSubnet6CIDR
        PublicSubnet1CIDR:
          Ref: PublicSubnet1CIDR
        PublicSubnet2CIDR:
          Ref: PublicSubnet2CIDR
        PublicSubnet3CIDR:
          Ref: PublicSubnet3CIDR
        PublicSubnet4CIDR:
          Ref: PublicSubnet4CIDR
        PublicSubnet5CIDR:
          Ref: PublicSubnet5CIDR
        PublicSubnet6CIDR:
          Ref: PublicSubnet6CIDR
        VPCCIDR:
          Ref: VPCCIDR
      Tags:
        - Key: "Name"
          Value:
            !Sub
              - "${ShortID}-vSensor-VPC-Stack"
              - ShortID: !If
                - GenerateShortID
                - !GetAtt ShortIDRand.IDString
                - !Ref ShortID

  VSensorStack:
    
    Type: AWS::CloudFormation::Stack
    DeletionPolicy: Delete
    # Ignore Notification ARN in customer env.
    # kics-scan ignore-line
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/darktrace-vsensor-workload.template.yaml'
          - S3Bucket: !If
              - UsingDefaultBucket
              - !Sub "aws-ia-${AWS::Region}"
              - !Ref "QSS3BucketName"
            S3Region: !If
              - UsingDefaultBucket
              - !Ref "AWS::Region"
              - !Ref "QSS3BucketRegion"
      Parameters:
        DarktraceInstanceHostname: !Ref DarktraceInstanceHostname
        DarktraceInstancePushtoken: !Ref DarktraceInstancePushtoken
        DarktraceInstanceProxy: !Ref DarktraceInstanceProxy
        VsensorUpdatekey: !Ref VSensorUpdatekey
        osSensorHMAC: !Ref VSensorOsSensorHMAC
        Subnets:
          !Join
            - ","
            - - Fn::GetAtt:
                - VPCStack
                - Outputs.PrivateSubnet1AID
              - !If
                - 2AZCondition
                - Fn::GetAtt:
                  - VPCStack
                  - Outputs.PrivateSubnet2AID
                - !Ref AWS::NoValue
              - !If
                - 3AZCondition
                - Fn::GetAtt:
                  - VPCStack
                  - Outputs.PrivateSubnet3AID
                - !Ref AWS::NoValue
              - !If
                - 4AZCondition
                - Fn::GetAtt:
                  - VPCStack
                  - Outputs.PrivateSubnet4AID
                - !Ref AWS::NoValue
              - !If
                - 5AZCondition
                - Fn::GetAtt:
                  - VPCStack
                  - Outputs.PrivateSubnet5AID
                - !Ref AWS::NoValue
              - !If
                - 6AZCondition
                - Fn::GetAtt:
                  - VPCStack
                  - Outputs.PrivateSubnet6AID
                - !Ref AWS::NoValue
        DeploymentVPC:
          !GetAtt
            - VPCStack
            - Outputs.VPCID
        InstanceType: !Ref VSensorInstanceType
        LifecycleS3BucketDays: !Ref VSensorLifecycleS3BucketDays
        DesiredCapacityASG: !Ref VSensorDesiredCapacityASG
        MinSizeASG: !Ref VSensorMinSizeASG
        MaxSizeASG: !Ref VSensorMaxSizeASG
        LogGroupRetention: !Ref VSensorLogGroupRetention
        TrafficMirrorRuleNumber: !Ref VSensorTrafficMirrorRuleNumber
        TrafficMirrorSourceCIDR: !Ref VSensorTrafficMirrorSourceCIDR
        TrafficMirrorDestCIDR: !Ref VSensorTrafficMirrorDestCIDR
        CrossZoneLBEnable: !Ref VSensorCrossZoneLBEnable
        VpcCIDRBlock: !Ref VPCCIDR
        SshCIDRBlock: !Ref VPCCIDR
        SessionManagerEnable: !Ref SessionManagerEnable
        KeyPairName: !Ref VSensorKeyPairName
        ShortID: !If
            - GenerateShortID
            - !GetAtt ShortIDRand.IDString
            - !Ref ShortID
      Tags:
        - Key: "Name"
          Value:
            !Sub
              - "${ShortID}-vSensor-Stack"
              - ShortID: !If
                - GenerateShortID
                - !GetAtt ShortIDRand.IDString
                - !Ref ShortID

Outputs:

  DeploymentVPC:
    Description: ID of the deployed VPC.
    Value: !GetAtt
      - VPCStack
      - Outputs.VPCID

  PrivateSubnets:
    Description: Subnet IDs of the private subnets.
    Value: !Join
      - ","
      - - Fn::GetAtt:
          - VPCStack
          - Outputs.PrivateSubnet1AID
        - !If
          - 2AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet2AID
          - !Ref "AWS::NoValue"
        - !If
          - 3AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet3AID
          - !Ref "AWS::NoValue"
        - !If
          - 4AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet4AID
          - !Ref "AWS::NoValue"
        - !If
          - 5AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet5AID
          - !Ref "AWS::NoValue"
        - !If
          - 6AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PrivateSubnet6AID
          - !Ref "AWS::NoValue"

  PublicSubnets:
    Description: Subnet IDs of the public subnets.
    Value: !Join
      - ","
      - - Fn::GetAtt:
          - VPCStack
          - Outputs.PublicSubnet1ID
        - !If
          - 2AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet2ID
          - !Ref "AWS::NoValue"
        - !If
          - 3AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet3ID
          - !Ref "AWS::NoValue"
        - !If
          - 4AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet4ID
          - !Ref "AWS::NoValue"
        - !If
          - 5AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet5ID
          - !Ref "AWS::NoValue"
        - !If
          - 6AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.PublicSubnet6ID
          - !Ref "AWS::NoValue"

  NatGatewayEIPs:
    Description: Elastic IPs allocated to subnets, allow these access to your Darktrace Instance.
    Value: !Join
      - ","
      - - Fn::GetAtt:
          - VPCStack
          - Outputs.NAT1EIP
        - !If
          - 2AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.NAT2EIP
          - !Ref "AWS::NoValue"
        - !If
          - 3AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.NAT3EIP
          - !Ref "AWS::NoValue"
        - !If
          - 4AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.NAT4EIP
          - !Ref "AWS::NoValue"
        - !If
          - 5AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.NAT5EIP
          - !Ref "AWS::NoValue"
        - !If
          - 6AZCondition
          - Fn::GetAtt:
            - VPCStack
            - Outputs.NAT6EIP
          - !Ref "AWS::NoValue"

  LoadBalancer:
    Description: Network Load Balancer, required for osSensor clients.
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.LoadBalancer

  LoadBalancerDNS:
    Description: DNS name of the Network Load Balancer, required for osSensor clients.
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.LoadBalancerDNS

  TrafficMirrorFilterId:
    Description: ID of the Traffic Mirror filter generated for Traffic Mirror sessions.
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.TrafficMirrorFilterId

  TrafficMirrorTargetId:
    Description: ID of the Traffic Mirror target generated for Traffic Mirror sessions.
    Value: 
      Fn::GetAtt:
      - VSensorStack
      - Outputs.TrafficMirrorTargetId

  BucketName:
    Description: Name of the PCAP S3 bucket.
    Condition: CreatePCAPStorage
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.BucketName
  
  SessionManagerPreferences:
    Condition: AllowSessionsManager
    Description: Session Manager logging settings document for using Session Manager to connect to vSensors.
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.SessionManagerPreferences

  SessionManagerKMSKeyId:
    Condition: AllowSessionsManager
    Description: When using the web-based Session Manager terminal, you must set your preferences with this KMS Key ID for encryption to be enabled.
    Value:
      Fn::GetAtt:
      - VSensorStack
      - Outputs.SessionManagerKMSKeyId


  Postdeployment:
    Description: See the deployment guide for post-deployment steps.
    Value: https://aws-ia.github.io/cfn-ps-darktrace-vsensor/#_postdeployment_steps
